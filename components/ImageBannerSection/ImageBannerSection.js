"use client"
import React, { useState } from 'react'
import './ImageBannerSection.css'
import Image from 'next/image'
const ImageBannerSection = () => {

    const [firstName, setFirstName] = useState('');
    const [lastName, setLastName] = useState('');
    const [city, setCity] = useState('');
    const [phoneNumber, setPhoneNumber] = useState('');
    const [email, setEmail] = useState('');
    const [factoryVisit, setFactoryVisit] = useState(true);

    const [firstNameValid, setFirstNameValid] = useState(true);
    const [lastNameValid, setLastNameValid] = useState(true);
    const [cityValid, setCityValid] = useState(true);
    const [phoneNumberValid, setPhoneNumberValid] = useState(true);
    const [emailValid, setEmailValid] = useState(true);


    const handleSubmit = () => {

        // Validate the form fields
        const isValid =
        firstName !== '' &&
        lastName !== '' &&
        city !== '' &&
        validatePhoneNumber(phoneNumber) &&
        validateEmail(email);

  // Set validity state for each field
  setFirstNameValid(firstName !== '');
  setLastNameValid(lastName !== '');
  setCityValid(city !== '');
  setPhoneNumberValid(validatePhoneNumber(phoneNumber));
  setEmailValid(validateEmail(email));

  if (isValid) {
       alert(`Hi ${firstName}, Your slot is Booked!`);
    } 
};

const handleFirstNameChange = (e) => {
    setFirstName(e.target.value);
    setFirstNameValid(true);
  };

  const handleLastNameChange = (e) => {
    setLastName(e.target.value);
    setLastNameValid(true);
  };

  const handleCityChange = (e) => {
    setCity(e.target.value);
    setCityValid(true);
  };

  const handlePhoneNumberChange = (e) => {
    setPhoneNumber(e.target.value);
    setPhoneNumberValid(true);
  };

  const handleEmailChange = (e) => {
    setEmail(e.target.value);
    setEmailValid(true);
  };

  const validatePhoneNumber = (number) => {
    // Regular expression for a valid phone number (10 digits)
    const phoneRegex = /^\d{10}$/;
    return phoneRegex.test(number);
  };

  const validateEmail = (email) => {
    // Regular expression for a valid email address
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    return emailRegex.test(email);
  };

  return (
    <div className='image-banner-section'>
        <div className='container-fluid px-0'>
            <div className='image-banner__item col-12'>
                <Image loading='eager' priority  className='image-banner__desktop-img d-none d-md-block w-100 h-auto' width={1920} height={890} src="/image-banner-1.webp" alt="Image Banner"/>
                <Image loading='eager' priority  className='image-banner__mobile-img d-block d-md-none w-100 h-auto' width={428} height={579} src="/mobile-banner-1.webp" alt="Image Banner"/>
                <div className='image-banner__item-content col-lg-5  p-4 py-5 d-none d-lg-block'>
                   <div>
                   <div className='text-center'>
                        <div className='mb-4'>
                            <Image width={294} height={74} src="/logo.png" alt="Logo" />
                        </div>
                        <div className='mb-4 book-slot-text'>
                        Book Your Slot
                        </div>
                    </div>
                    <div className='row'>
                        <div className='col-6 mb-4'>
                            <label htmlFor="first-name">First name*</label>
                            <input
                            className={`form-control ${!firstNameValid ? 'is-invalid' : ''}`}
                            type="text"
                            id='first-name'
                            name="first-name"
                            value={firstName}
                            onChange={handleFirstNameChange}
                            />
                            {!firstNameValid && <div className="invalid-feedback">Please enter your first name.</div>}
                        </div>
                        <div className='col-6 mb-4'>
                            <label htmlFor="last-name">Last name*</label>
                            <input
                            className={`form-control ${!lastNameValid ? 'is-invalid' : ''}`}
                            type="text"
                            id='last-name'
                            name="last-name"
                            value={lastName}
                            onChange={handleLastNameChange}
                            />
                            {!lastNameValid && <div className="invalid-feedback">Please enter your last name.</div>}
                        </div>
                        <div className='col-6 mb-4'>
                            <label htmlFor="city">City*</label>
                            <input
                            className={`form-control ${!cityValid ? 'is-invalid' : ''}`}
                            type="text"
                            id='city'
                            name="city"
                            value={city}
                            onChange={handleCityChange}
                            />
                            {!cityValid && <div className="invalid-feedback">Please enter your city.</div>}
                        </div>
                        <div className='col-6 mb-4'>
                            <label htmlFor="phone-num">Phone Number*</label>
                            <input
                            className={`form-control ${!phoneNumberValid ? 'is-invalid' : ''}`}
                            type="tel"
                            id='phone-num'
                            name="phone-num"
                            value={phoneNumber}
                            onChange={handlePhoneNumberChange}
                            />
                            {!phoneNumberValid && <div className="invalid-feedback">Please enter a valid 10-digit phone number.</div>}
                        </div>
                        <div className='col-12 mb-4'>
                            <label htmlFor="email">Email address*</label>
                            <input
                            className={`form-control ${!emailValid ? 'is-invalid' : ''}`}
                            type="email"
                            id='email'
                            name="email"
                            value={email}
                            onChange={handleEmailChange}
                            />
                            {!emailValid && <div className="invalid-feedback">Please enter a valid email address.</div>}
                        </div>
                        <div className='col-6 mb-4'>
                            <div>Factory Visit:</div>
                            <div>
                            <label htmlFor="yes">Yes</label>
                            <input
                                className='ms-1'
                                type="checkbox"
                                id="yes"
                                name="yes"
                                checked={factoryVisit}
                                onChange={(e) => setFactoryVisit(e.target.checked)}
                            />
                            <label className='ms-3' htmlFor="no">No</label>
                            <input
                                className='ms-1'
                                type="checkbox"
                                id="no"
                                name="no"
                                checked={!factoryVisit}
                                onChange={(e) => setFactoryVisit(!e.target.checked)}
                            />
                            </div>
                        </div>
                        <div className='col-6 my-2'>
                            <div className=''>
                            <input
                                className='btn form-btn text-white px-3 py-2 w-100'
                                type="button"
                                value="Submit"
                                onClick={handleSubmit}
                            />
                            </div>
                        </div>
                        </div>
                   </div>
                </div>
                <div className='d-block d-md-none image-banner__item-content-mobile'>
                    <div>
                        <div>
                        <svg width="54" height="41" viewBox="0 0 54 41" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M4.40289 40.4811C3.77808 40.5108 3.15426 40.4052 2.57507 40.1718C1.99588 39.9383 1.47531 39.5826 1.04978 39.1296C0.608836 38.5721 0.295552 37.9268 0.131556 37.2381C-0.0324396 36.5494 -0.0432425 35.8337 0.0998934 35.1405C0.164438 34.5721 0.35547 34.0249 0.65929 33.5381C0.96311 33.0512 1.37219 32.6369 1.85719 32.3247C2.44304 32.0181 3.10865 31.8926 3.76758 31.9646C4.42652 32.0366 5.04833 32.3026 5.55226 32.7283C5.9939 33.08 6.30714 33.5648 6.44431 34.1086C6.58149 34.6525 6.53509 35.2258 6.31217 35.7412C6.07091 36.1281 5.72277 36.4388 5.30877 36.6366C4.89478 36.8345 4.43217 36.9114 3.97544 36.8581L4.03244 35.9946C4.31726 36.0346 4.60771 35.9981 4.87341 35.8892C5.1391 35.7802 5.37028 35.6026 5.54276 35.3751C5.92272 34.6994 5.37178 33.8171 4.94433 33.4228C4.57667 33.1215 4.12674 32.9347 3.65156 32.8863C3.17638 32.8378 2.69734 32.9298 2.27514 33.1507C1.91208 33.3924 1.60615 33.7087 1.37827 34.0781C1.15039 34.4474 1.00593 34.8611 0.954794 35.2907C0.838056 35.8557 0.845491 36.4388 0.976594 37.0007C1.1077 37.5626 1.35941 38.0902 1.71471 38.5476C3.00655 40.0306 5.51426 39.7021 6.8916 39.1108C9.43731 38.022 10.2447 35.1405 10.6912 33.4792C10.8717 32.8383 10.9862 32.1811 11.0331 31.5175C8.44942 31.6207 6.19818 31.0482 5.09631 29.5933C3.99444 28.1385 3.93745 25.501 5.09631 24.6375C6.39766 23.6332 9.04785 24.7877 10.4632 26.4678C11.2742 27.4766 11.7724 28.6958 11.8975 29.9782C11.8975 30.1847 11.945 30.3912 11.964 30.607C14.7167 30.3003 17.377 29.4411 19.7816 28.0822C22.8022 26.3082 24.531 24.9566 26.4308 22.0751L26.5258 21.9156C24.3601 18.4803 24.0846 17.5417 24.3696 16.2933C24.4588 15.8776 24.6647 15.4951 24.9637 15.1896C25.2627 14.8842 25.6428 14.6682 26.0604 14.5663C26.2496 14.5055 26.4312 14.4236 26.6018 14.3223L26.7158 14.2472H27.0483L27.1622 14.3223C27.3304 14.4219 27.5087 14.5037 27.6942 14.5663C28.114 14.6656 28.4966 14.8806 28.7976 15.1863C29.0986 15.492 29.3056 15.8759 29.3945 16.2933C29.6605 17.4478 29.3945 18.8557 27.5802 21.8593C29.1819 24.3222 31.3831 26.3488 33.9824 27.7537C36.3878 29.1211 39.0459 29.9988 41.8 30.3348C41.8 30.1753 41.8 30.0345 41.8 29.9125C41.9243 28.6242 42.4223 27.3987 43.2344 26.3833C44.6592 24.7032 47.3189 23.5206 48.6107 24.5061C49.7316 25.379 49.7126 27.8945 48.6107 29.3962C47.5089 30.898 45.2481 31.4142 42.6549 31.2734C42.6936 31.9911 42.8115 32.7024 43.0064 33.3947C43.4908 35.1029 44.2887 37.9845 46.806 39.0263C48.1738 39.6176 50.691 39.9649 51.9733 38.4725C52.3289 38.0134 52.5807 37.4842 52.7117 36.9208C52.8428 36.3573 52.8502 35.7727 52.7333 35.2062C52.6834 34.7749 52.5396 34.3595 52.3117 33.9884C52.0837 33.6173 51.7771 33.2995 51.4129 33.0568C50.9907 32.836 50.5117 32.744 50.0365 32.7924C49.5613 32.8409 49.1114 33.0276 48.7437 33.329C48.3163 33.7232 47.7938 34.6055 48.1548 35.2813C48.3197 35.5198 48.5478 35.709 48.8142 35.8282C49.0805 35.9474 49.3749 35.992 49.6651 35.9571L49.7316 36.8206C49.2992 36.8606 48.8638 36.7851 48.4711 36.6018C48.0784 36.4185 47.7427 36.1342 47.4994 35.7787C47.2759 35.2626 47.2301 34.6882 47.3691 34.1439C47.5082 33.5996 47.8242 33.1154 48.2688 32.7658C48.7712 32.341 49.3914 32.0753 50.0487 32.0033C50.706 31.9314 51.3699 32.0564 51.9544 32.3622C52.4416 32.6719 52.8525 33.0857 53.1566 33.573C53.4607 34.0603 53.6504 34.6087 53.7116 35.178C53.8599 35.8696 53.8516 36.5849 53.6874 37.2729C53.5232 37.9609 53.2071 38.6045 52.7618 39.1577C51.0425 41.1382 48.0123 40.5469 46.5875 39.9555C43.6428 38.6978 42.7309 35.4408 42.2465 33.695C41.9996 32.8925 41.8497 32.0639 41.8 31.2265C38.8869 30.8964 36.0754 29.9693 33.5455 28.5046C30.942 27.1022 28.7196 25.0994 27.0673 22.6665C25.1675 25.5855 23.2677 26.9746 20.2186 28.7768C17.6809 30.2267 14.8611 31.1288 11.945 31.4236C11.898 32.1794 11.7707 32.9281 11.5651 33.6575C11.0806 35.4033 10.1687 38.6509 7.23356 39.9086C6.33165 40.2848 5.36286 40.4794 4.38389 40.4811M6.30267 25.0505C6.06184 25.0395 5.82428 25.1089 5.62825 25.2476C4.93483 25.7826 4.91583 27.81 5.81823 29.002C6.72062 30.1941 8.74389 30.7103 11.0711 30.607C11.0711 30.3724 11.0711 30.1847 11.0236 30.0345C10.9246 28.9113 10.4954 27.8412 9.78877 26.9559C8.91292 25.9121 7.66512 25.2402 6.30267 25.0787M42.6929 30.4099C45.0202 30.5319 47.0149 30.1002 47.9363 28.88C48.8577 27.6598 48.8197 25.7357 48.1358 25.2007C47.4519 24.6657 45.1816 25.5198 43.9658 26.9465C43.2723 27.8411 42.8507 28.9121 42.7499 30.0345C42.7499 30.1471 42.7499 30.2691 42.7499 30.4099M26.8868 15.167C26.7158 15.2515 26.5448 15.3172 26.3738 15.3829C25.8324 15.58 25.4239 15.7396 25.2245 16.4904C25.025 17.2413 25.044 17.8983 27.0483 21.0427C28.6441 18.3864 28.7201 17.2883 28.5301 16.4904C28.3401 15.6926 27.9317 15.5518 27.3902 15.3829C27.2183 15.3206 27.0502 15.2485 26.8868 15.167Z" fill="white"/>
                        <path d="M14.4909 25.9891C13.1227 26.0305 11.7708 25.6862 10.5933 24.9965C9.41583 24.3067 8.46141 23.2999 7.84165 22.0939C6.77778 19.8037 6.97725 16.3684 9.1525 14.8291C10.7578 13.6934 13.3415 13.1772 15.1748 14.388C16.0342 14.8602 16.6966 15.6181 17.0444 16.527C17.3922 17.4359 17.4029 18.4372 17.0746 19.3532C16.8189 20.0393 16.357 20.6318 15.7509 21.0512C15.1448 21.4706 14.4234 21.6969 13.6835 21.6997C13.219 21.657 12.7741 21.4939 12.3938 21.227C12.0136 20.96 11.7113 20.5985 11.5177 20.1792C11.3787 19.7521 11.3713 19.2939 11.4964 18.8627C11.6216 18.4315 11.8737 18.0468 12.2206 17.7576C12.3845 17.5959 12.6065 17.5051 12.8381 17.5051C13.0696 17.5051 13.2917 17.5959 13.4555 17.7576C13.6197 17.9211 13.7118 18.142 13.7118 18.3723C13.7118 18.6027 13.6197 18.8236 13.4555 18.9871C13.2085 19.2499 13.085 19.4846 13.123 19.6066C13.2016 19.7171 13.3034 19.8094 13.4214 19.8775C13.5395 19.9455 13.671 19.9876 13.807 20.0008C14.1664 19.9593 14.507 19.8196 14.7905 19.5974C15.0741 19.3753 15.2894 19.0794 15.4123 18.7431C15.5962 18.1967 15.581 17.604 15.3694 17.0675C15.1578 16.531 14.763 16.0845 14.2534 15.8053C13.1325 15.0731 11.3182 15.4392 10.2164 16.2182C8.83904 17.1569 8.72505 19.7005 9.48496 21.343C9.99571 22.2723 10.7659 23.0371 11.7039 23.5462C12.6419 24.0554 13.7081 24.2876 14.7758 24.2151C16.2863 24.0895 17.7045 23.4453 18.7844 22.3943C20.1779 21.2803 21.1188 19.7075 21.4346 17.964C21.6643 16.2904 21.3305 14.5885 20.4847 13.1209C19.4288 13.48 18.2786 13.4601 17.2361 13.0645C16.0201 12.5501 15.0486 11.5967 14.5194 10.3989C14.4145 10.1687 14.3603 9.91921 14.3603 9.66679C14.3603 9.41438 14.4145 9.16484 14.5194 8.93468C14.8613 8.2495 15.6687 7.93038 16.9416 7.99608C18.0362 8.09874 19.0622 8.56917 19.8483 9.3289C20.3789 9.80872 20.8365 10.362 21.2066 10.9715C21.919 10.6242 22.7169 10.1643 23.6383 9.62925C24.3222 9.23504 24.9587 8.85959 25.5381 8.47477C24.8879 7.80901 24.3921 7.01156 24.0848 6.13764C23.8473 5.46185 23.1349 3.42508 24.3507 1.85761C24.8335 1.2067 25.5576 0.771322 26.3645 0.646813C26.708 0.600131 27.0564 0.600131 27.3999 0.646813C27.8014 0.694652 28.1893 0.820448 28.5414 1.01697C28.8936 1.21348 29.2029 1.47685 29.4516 1.79191C30.7055 3.36876 29.9551 5.46185 29.7176 6.14703C29.4075 6.99931 28.9224 7.77902 28.2928 8.43722C28.8627 8.82205 29.4896 9.19749 30.1925 9.57293C31.0664 10.0892 31.8833 10.5679 32.6338 10.9245C33.0296 10.3285 33.5094 9.79124 34.0586 9.3289C34.842 8.56532 35.8694 8.09422 36.9653 7.99608C38.2286 7.93038 39.0455 8.2495 39.3875 8.93468C39.4868 9.1663 39.5379 9.41526 39.5379 9.66679C39.5379 9.91832 39.4868 10.1673 39.3875 10.3989C38.8571 11.5938 37.8855 12.5437 36.6708 13.0552C35.6309 13.4611 34.478 13.4844 33.4222 13.1209C32.5763 14.5919 32.2425 16.2968 32.4723 17.9734C32.7873 19.7195 33.7322 21.2935 35.132 22.4036C36.2075 23.4553 37.6231 24.0999 39.131 24.2245C40.1987 24.297 41.265 24.0648 42.203 23.5556C43.1409 23.0464 43.9111 22.2817 44.4219 21.3524C45.1818 19.7099 45.0678 17.2038 43.6905 16.2276C42.5886 15.4486 40.7838 15.0825 39.6629 15.8146C39.1518 16.077 38.7495 16.5077 38.5258 17.0322C38.302 17.5567 38.2708 18.142 38.4376 18.6868C38.5461 19.0052 38.739 19.2889 38.9963 19.5085C39.2536 19.7281 39.5658 19.8754 39.9004 19.9351C40.0364 19.9219 40.1679 19.8798 40.2859 19.8118C40.404 19.7437 40.5057 19.6514 40.5843 19.5409C40.5843 19.4189 40.4988 19.1842 40.2519 18.9214C40.1141 18.75 40.0466 18.5337 40.0626 18.3154C40.0786 18.0972 40.177 17.8928 40.3384 17.7428C40.4997 17.5928 40.7122 17.5082 40.9337 17.5057C41.1551 17.5033 41.3695 17.5831 41.5342 17.7294C41.8806 18.019 42.1316 18.4042 42.2551 18.8356C42.3786 19.267 42.3691 19.725 42.2276 20.151C42.0348 20.5709 41.7328 20.9329 41.3524 21.2C40.9719 21.4671 40.5267 21.6298 40.0619 21.6715C39.3223 21.6674 38.6015 21.4406 37.9956 21.0214C37.3898 20.6021 36.9276 20.0104 36.6708 19.325C36.3445 18.4089 36.3561 17.4083 36.7037 16.4999C37.0513 15.5914 37.7125 14.8335 38.5706 14.3598C40.4039 13.149 42.9971 13.6652 44.6024 14.801C46.7681 16.3403 46.9676 19.7756 45.9132 22.0657C45.2679 23.3207 44.2645 24.3612 43.0269 25.0586C41.7894 25.7559 40.3722 26.0794 38.9505 25.9891C37.0487 25.8592 35.255 25.0677 33.8876 23.7552C32.1679 22.3778 31.0134 20.4297 30.639 18.2738C30.3564 16.2815 30.7364 14.2524 31.7219 12.492C30.924 12.0978 30.0976 11.6191 29.2427 11.1122C28.3878 10.6054 27.6373 10.1736 26.9059 9.65741C26.1446 10.1927 25.3551 10.6877 24.5407 11.1404C23.6953 11.6285 22.8784 12.079 22.0615 12.5014C23.0398 14.2643 23.4194 16.2911 23.1444 18.2832C22.7637 20.4342 21.6102 22.3773 19.8957 23.7552C18.5221 25.0697 16.7217 25.8611 14.8138 25.9891H14.4909ZM16.0867 9.77004C16.447 10.5187 17.0672 11.1149 17.8345 11.4501C18.3631 11.6582 18.9444 11.6976 19.4968 11.5628C19.2427 11.2208 18.953 10.9062 18.6324 10.6242C18.1385 10.1155 17.4863 9.78509 16.7801 9.68557C16.5497 9.65959 16.3171 9.65959 16.0867 9.68557M34.2771 11.4595C34.8258 11.5922 35.4024 11.5562 35.9299 11.3563C36.6965 11.0247 37.3169 10.4317 37.6777 9.68557C37.4476 9.65512 37.2144 9.65512 36.9843 9.68557C36.26 9.7712 35.5884 10.103 35.0845 10.6242C34.7694 10.8888 34.4858 11.188 34.2391 11.5158M26.8869 2.39262H26.602C26.4201 2.40483 26.2425 2.4526 26.0794 2.53316C25.9163 2.61372 25.7711 2.72547 25.6521 2.86192C25.0157 3.66912 25.4621 4.93623 25.6521 5.47124C25.9003 6.15345 26.2994 6.77233 26.8204 7.28274C27.3416 6.80884 27.7531 6.22935 28.0268 5.58387C28.2168 5.04886 28.7012 3.70666 28.0268 2.8713C27.9108 2.73148 27.7662 2.61742 27.6025 2.53655C27.4388 2.45568 27.2597 2.40984 27.0769 2.402H26.8869" fill="white"/>
                        </svg>
                        </div>  
                        <div className='image-banner__item-content-mobile-caption'>
                        New Collection 2023
                        </div>
                        <div className='my-2 image-banner__item-content-mobile-title'>
                        Indian GlamBride
                        </div>
                        <div className='image-banner__item-content-mobile-text'>
                        Discover a new essential collection of weddingjewelry for the 2023 season.
                        </div>
                    </div>    
                </div>
            </div>
        </div>
    </div>
  )
}

export default ImageBannerSection
